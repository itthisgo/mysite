name: AMI 기반 롤링 업데이트

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Build
      run: ./gradlew build

    - name: Upload to S3
      run: aws s3 cp build/libs/mysite.jar s3://mysite-springbootapp-deploy-bucket/mysite.jar
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ap-northeast-2

    - name: Build AMI with Packer
      run: packer build ami.pkr.hcl
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ap-northeast-2

    - name: Get latest AMI
      id: ami
      run: |
        AMI_ID=$(aws ec2 describe-images --owners self --filters "Name=name,Values=mysite-app-*" --query "Images | sort_by(@, &CreationDate)[-1].ImageId" --output text)
        echo "AMI_ID=$AMI_ID" >> $GITHUB_ENV
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ap-northeast-2

    - name: Update Launch Template Version
      run: |
        aws ec2 create-launch-template-version \
          --launch-template-id lt-047d936eedc81dfc8 \
          --source-version 1 \
          --launch-template-data "{\"ImageId\":\"${{ env.AMI_ID }}\"}"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ap-northeast-2

    - name: Start ASG Rolling Update
      run: |
        aws autoscaling start-instance-refresh \
          --auto-scaling-group-name my-asg \
          --strategy Rolling
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ap-northeast-2
